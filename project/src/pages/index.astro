---
import Layout from "../layouts/Layout.astro";
// import Card from "../components/Card.astro";
import IconArrow from "../components/IconArrow.astro";
import IconRocket from "../components/IconRocket.astro";
import IconBall from "../components/IconBall.astro";
import "../styles/utils.css";
---

<Layout title="Astro with GSAP animation">
  <main>
    <h1>
      <span class="text-gradient">Astro with GSAP animation</span>へようこそ
    </h1>
    <p class="instructions">
      こんにちは、このページでは、AstroとGSAPを使い、要素のアニメーションを実装しています。<br
      />下へスクロールしてみてください。
    </p>

    <IconArrow classStr="js-anim-down center" />

    <h2>1: リピートアニメーション：</h2>
    <p>
      上部でも使ってますが、こちらはリピートアニメーションです。<br />
      <span class="color-other">gsap.timeline()</span
      >を使って、繰り返し実行しています。
    </p>
    <IconArrow classStr="js-anim-down" />

    <h2>2: スクロール連動アニメーション：</h2>
    <p>
      こちらはスクロールに応じて連動表示されるアニメーションです。<br />
       GSAPのプラグイン<span class="color-other">ScrollTrigger</span
      >を使って、細かく設定することができます。
    </p>
    <div class="flexBox">
      <IconRocket classStr="js-slidein-left" />
      <IconRocket classStr="js-slidein-left" />
      <IconRocket classStr="js-slidein-left" />
    </div>

    <h2>3: PC/SP出し分けアニメーション（＋スクロール連動）</h2>
    <p>
      こちらはPCやSPの端末ごとに出し分けができるアニメーションです。<br />
      <span class="color-other">ScrollTrigger.matchMedia()</span
      >で設定できます。
      こちらの例では、pcでは横に回転し、SPでは縦に回転するように出現します。
    </p>
    <IconBall classStr="js-match-media" />

    <p class="mt note">
      今回の実装の参考サイト：
      <a href="https://ics.media/entry/220825/" target="_blank"
        >https://ics.media/entry/220825/
      </a>
      <a href="https://yumegori.com/gsap-scrolltrigger" target="_blank"
        >https://yumegori.com/gsap-scrolltrigger
      </a>
    </p>
  </main>
</Layout>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  // timeline()でリピート処理
  const targetDown = document.querySelectorAll(".js-anim-down");
  const tl = gsap.timeline({ repeat: -1, repeatDelay: 0.5 }); // timeline関数では、最初に初期化しておく

  if (targetDown) {
    tl.add(
      gsap.to(targetDown, {
        y: 0,
        autoAlpha: 1,
        duration: 1,
      }),
    );
    tl.add(
      gsap.to(targetDown, {
        autoAlpha: 1,
        y: 50,
        ease: "power1.out",
        duration: 1.5,
      }),
    );
    tl.add(
      gsap.to(targetDown, {
        autoAlpha: 0,
        y: 50,
        ease: "power1.out",
        duration: 1.5,
      }),
    );
  }

  // 複数要素を時間差で出現させたい場合は、staggerプロパティを指定。
  const targetSlideInLeft = document.querySelectorAll(".js-slidein-left");
  if (targetSlideInLeft) {
    const scrollAnim = gsap.from(targetSlideInLeft, {
      autoAlpha: 0,
      xPercent: -500,
      ease: "power3",
      duration: 2,
      stagger: 0.8,
    });
    // スクロールトリガーの設定
    ScrollTrigger.create({
      trigger: targetSlideInLeft,
      animation: scrollAnim,
      start: "top+=100 bottom", //topからのoffsetを100追加
      once: true,
      toggleActions: "play none none none",
      markers: false, // 開発中などにマーカー表示したいとき
    });
  }

  // matchMediaで端末ごとに処理を分ける。
  const targetMatchMedia = document.querySelectorAll(".js-match-media");
  if (targetMatchMedia) {
    ScrollTrigger.matchMedia({
      // 769px以上
      "(min-width: 769px)": function () {
        gsap.to(targetMatchMedia, {
          autoAlpha: 1,
          x: 500,
          rotation: 360,
          duration: 3,
          scrollTrigger: {
            trigger: targetMatchMedia,
            start: "top+=100 bottom",
          },
        });
      },

      // 768px以下
      "(max-width: 768px)": function () {
        gsap.fromTo(
          targetMatchMedia,
          {
            autoAlpha: 0,
            y: -50,
            scale: 2,
            rotation: 0,
            duration: 2,
            scrollTrigger: {
              trigger: targetMatchMedia,
              start: "top bottom",
            },
          },
          {
            autoAlpha: 1,
            y: 50,
            scale: 2,
            rotation: 360,
            duration: 2,
            scrollTrigger: {
              trigger: targetMatchMedia,
              start: "top bottom",
            },
          },
        );
      },

      // メディアのサイズに関係なく、すべてに適用する
      all: function () {
        gsap.set(targetMatchMedia, { autoAlpha: 0 });
      },
    });
  }
</script>
